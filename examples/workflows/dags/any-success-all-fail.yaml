apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: any-success-all-fail-
spec:
  entrypoint: d
  templates:
  - name: d
    dag:
      tasks:
      - name: t1
        template: random-fail
        withParam: '[1, 2, 3]'
        arguments:
          parameters:
          - name: a
            value: '{{item}}'
      - name: t2
        depends: t1.AnySucceeded
        template: fail
        withParam: '[1, 2, 3]'
        arguments:
          parameters:
          - name: a
            value: '{{item}}'
      - name: t3
        depends: t2.AllFailed
        template: foo
        withParam: '[1, 2, 3]'
        arguments:
          parameters:
          - name: a
            value: '{{item}}'
  - name: random-fail
    inputs:
      parameters:
      - name: a
    script:
      image: python:3.9
      source: |-
        import os
        import sys
        sys.path.append(os.getcwd())
        import json
        try: a = json.loads(r'''{{inputs.parameters.a}}''')
        except: a = r'''{{inputs.parameters.a}}'''

        import random
        random.seed(a)
        if random.random() < 0.5:
            raise Exception('Oh, no!')
      command:
      - python
  - name: fail
    inputs:
      parameters:
      - name: a
    script:
      image: python:3.9
      source: |-
        import os
        import sys
        sys.path.append(os.getcwd())
        import json
        try: a = json.loads(r'''{{inputs.parameters.a}}''')
        except: a = r'''{{inputs.parameters.a}}'''

        raise Exception(a)
      command:
      - python
  - name: foo
    inputs:
      parameters:
      - name: a
    script:
      image: python:3.9
      source: |-
        import os
        import sys
        sys.path.append(os.getcwd())
        import json
        try: a = json.loads(r'''{{inputs.parameters.a}}''')
        except: a = r'''{{inputs.parameters.a}}'''

        print(a)
      command:
      - python
