apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: my-workflow-
spec:
  entrypoint: worker
  templates:
  - name: setup
    outputs:
      parameters:
      - name: environment_parameter
        valueFrom:
          path: /tmp/hera-outputs/parameters/environment_parameter
      - name: dummy-param
        valueFrom:
          path: /tmp/hera-outputs/parameters/dummy-param
      - name: setup-config
        valueFrom:
          path: /tmp/hera-outputs/parameters/setup-config
    script:
      args:
      - -m
      - hera.workflows.runner
      - -e
      - examples.workflows.experimental.new_dag_decorator_params:setup
      command:
      - python
      env:
      - name: hera__script_annotations
        value: ''
      - name: hera__outputs_directory
        value: /tmp/hera-outputs
      - name: hera__script_pydantic_io
        value: ''
      image: python:3.9
      source: '{{inputs.parameters}}'
  - inputs:
      parameters:
      - default: ''
        name: word_a
      - name: word_b
      - default: '{"reverse": false}'
        name: concat_config
    name: concat
    script:
      args:
      - -m
      - hera.workflows.runner
      - -e
      - examples.workflows.experimental.new_dag_decorator_params:concat
      command:
      - python
      env:
      - name: hera__script_annotations
        value: ''
      - name: hera__outputs_directory
        value: /tmp/hera-outputs
      - name: hera__script_pydantic_io
        value: ''
      image: python:3.9
      source: '{{inputs.parameters}}'
  - dag:
      tasks:
      - name: setup_task
        template: setup
      - arguments:
          parameters:
          - name: word_a
            value: '{{inputs.parameters.value_a}}'
          - name: word_b
            value: '{{tasks.setup_task.outputs.parameters.environment_parameter}}{{tasks.setup_task.outputs.parameters.dummy-param}}'
          - name: concat_config
            value: '{"reverse": false}'
        depends: setup_task
        name: task_a
        template: concat
      - arguments:
          parameters:
          - name: word_a
            value: '{{inputs.parameters.value_b}}'
          - name: word_b
            value: '{{tasks.setup_task.outputs.result}}'
          - name: concat_config
            value: '{"reverse": false}'
        depends: setup_task
        name: task_b
        template: concat
      - arguments:
          parameters:
          - name: word_a
            value: '{{tasks.task_a.outputs.result}}'
          - name: word_b
            value: '{{tasks.task_b.outputs.result}}'
          - name: concat_config
            value: '{"reverse": false}'
        depends: task_a && task_b
        name: final_task
        template: concat
    inputs:
      parameters:
      - default: my default
        name: value_a
      - name: value_b
      - default: '42'
        name: an_int_value
      - default: '{"param_1": "Hello", "param_2": "world"}'
        name: a_basemodel
    name: worker
    outputs:
      parameters:
      - name: value
        valueFrom:
          parameter: '{{tasks.final_task.outputs.result}}'
