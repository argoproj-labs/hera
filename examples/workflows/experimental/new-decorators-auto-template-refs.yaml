apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: my-workflow-
spec:
  entrypoint: worker
  templates:
  - name: worker
    dag:
      tasks:
      - name: run-setup-dag
        templateRef:
          name: my-cluster-workflow-template
          clusterScope: true
          template: run-setup-dag
      - name: setup-task
        templateRef:
          name: my-cluster-workflow-template
          clusterScope: true
          template: setup
      - name: task-a
        depends: setup-task
        arguments:
          parameters:
          - name: word_a
            value: '{{inputs.parameters.value_a}}'
          - name: word_b
            value: '{{tasks.setup-task.outputs.parameters.environment_parameter}}{{tasks.setup-task.outputs.parameters.dummy-param}}'
          - name: concat_config
            value: '{"reverse": false}'
        templateRef:
          name: my-workflow-template
          template: concat
      - name: task-b
        depends: setup-task
        arguments:
          parameters:
          - name: word_a
            value: '{{inputs.parameters.value_b}}'
          - name: word_b
            value: '{{tasks.setup-task.outputs.result}}'
          - name: concat_config
            value: '{"reverse": false}'
        templateRef:
          name: my-workflow-template
          template: concat
      - name: final-task
        depends: task-a && task-b
        arguments:
          parameters:
          - name: word_a
            value: '{{tasks.task-a.outputs.result}}'
          - name: word_b
            value: '{{tasks.task-b.outputs.result}}'
          - name: concat_config
            value: '{"reverse": false}'
        templateRef:
          name: my-workflow-template
          template: concat
    inputs:
      parameters:
      - name: value_a
        default: my default
      - name: value_b
        default: another default
      - name: an_int_value
        default: '42'
      - name: a_basemodel
        default: '{"param_1": "Hello", "param_2": "world"}'
    outputs:
      parameters:
      - name: value
        valueFrom:
          parameter: '{{tasks.final-task.outputs.result}}'
