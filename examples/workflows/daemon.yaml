apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: daemon-
spec:
  entrypoint: d
  templates:
  - dag:
      tasks:
      - name: server
        template: server
      - arguments:
          parameters:
          - name: ip
            value: '{{tasks.server.ip}}'
        depends: server
        name: consumer
        template: consumer
    name: d
  - daemon: true
    name: server
    script:
      command:
      - python
      image: python:3.8
      source: "import os\nimport sys\nsys.path.append(os.getcwd())\nfrom http.server\
        \ import BaseHTTPRequestHandler, HTTPServer\n\nclass MyServer(BaseHTTPRequestHandler):\n\
        \n    def do_GET(self):\n        self.send_response(200)\n        self.send_header('Content-type',\
        \ 'application/json')\n        self.end_headers()\n        self.wfile.write(bytes(\"\
        {'name':'John'}\", 'utf-8'))\nwebServer = HTTPServer(('0.0.0.0', 8080), MyServer)\n\
        webServer.serve_forever()"
  - inputs:
      parameters:
      - name: ip
    name: consumer
    script:
      command:
      - python
      image: python:3.8
      source: 'import os

        import sys

        sys.path.append(os.getcwd())

        import json

        try: ip = json.loads(r''''''{{inputs.parameters.ip}}'''''')

        except: ip = r''''''{{inputs.parameters.ip}}''''''


        import http.client

        import os

        print(os.environ)

        server_ip = ip.replace(''"'', '''')

        connection = http.client.HTTPConnection(''{server_ip}:8080''.format(server_ip=server_ip))

        connection.request(''GET'', ''/'')

        response = connection.getresponse()

        print(response.read())'
