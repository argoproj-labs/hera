apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: fan-in-
spec:
  entrypoint: d
  templates:
  - name: d
    dag:
      tasks:
      - name: generate
        template: generate
      - name: fanout
        depends: generate
        template: fanout
        withParam: '{{tasks.generate.outputs.result}}'
        arguments:
          parameters:
          - name: my_dict
            value: '{{item}}'
      - name: fanin
        depends: fanout
        template: fanin
        arguments:
          parameters:
          - name: values
            value: '{{tasks.fanout.outputs.parameters.value}}'
  - name: generate
    script:
      image: python:3.9
      source: |-
        import os
        import sys
        sys.path.append(os.getcwd())
        import json
        import sys
        json.dump([{'value': i} for i in range(10)], sys.stdout)
      command:
      - python
  - name: fanout
    inputs:
      parameters:
      - name: my_dict
    outputs:
      parameters:
      - name: value
        valueFrom:
          path: /tmp/value
    script:
      image: python:3.9
      source: |-
        import os
        import sys
        sys.path.append(os.getcwd())
        import json
        try: my_dict = json.loads(r'''{{inputs.parameters.my_dict}}''')
        except: my_dict = r'''{{inputs.parameters.my_dict}}'''

        print('Received object: {my_dict}!'.format(my_dict=my_dict))
        value = my_dict['value']
        with open('/tmp/value', 'w') as f:
            f.write(str(value))
      command:
      - python
  - name: fanin
    inputs:
      parameters:
      - name: values
    script:
      image: python:3.9
      source: |-
        import os
        import sys
        sys.path.append(os.getcwd())
        import json
        try: values = json.loads(r'''{{inputs.parameters.values}}''')
        except: values = r'''{{inputs.parameters.values}}'''

        print('Received values: {values}!'.format(values=values))
      command:
      - python
