apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: ci
spec:
  entrypoint: main
  onExit: cache-store
  templates:
  - name: cache-restore
    container:
      args:
      - |
        mkdir -p $(go env GOMODCACHE)
        [ -e /mnt/GOMODCACHE ] && cp -Rf /mnt/GOMODCACHE $(go env GOMODCACHE)
        mkdir -p $(go env GOCACHE)
        [ -e /mnt/GOCACHE ] &&  cp -Rf /mnt/GOCACHE $(go env GOCACHE)
      command:
      - sh
      - -euxc
      image: golang:1.18
      volumeMounts:
      - name: work
        mountPath: /go/pkg/mod
        subPath: mod
      - name: work
        mountPath: /root/.cache/go-build
        subPath: cache
      workingDir: /go/src/github.com/golang/example
    inputs:
      artifacts:
      - name: GOMODCACHE
        optional: true
        path: /mnt/GOMODCACHE
        s3:
          key: github.com/golang/examples/{{workflow.parameters.branch}}/GOMODCACHE
      - name: GOCACHE
        optional: true
        path: /mnt/GOCACHE
        s3:
          key: github.com/golang/examples/{{workflow.parameters.branch}}/GOCACHE
  - name: clone
    container:
      args:
      - |
        git clone -v -b "{{workflow.parameters.branch}}" --single-branch --depth 1 https://github.com/golang/example.git .
      command:
      - sh
      - -euxc
      image: golang:1.18
      volumeMounts:
      - name: work
        mountPath: /go/src/github.com/golang/example
        subPath: src
      - name: work
        mountPath: /go/pkg/mod
        subPath: GOMODCACHE
      - name: work
        mountPath: /root/.cache/go-build
        subPath: GOCACHE
      workingDir: /go/src/github.com/golang/example
  - name: deps
    container:
      args:
      - |
        go mod download -x
      command:
      - sh
      - -xuce
      image: golang:1.18
      volumeMounts:
      - name: work
        mountPath: /go/src/github.com/golang/example
        subPath: src
      - name: work
        mountPath: /go/pkg/mod
        subPath: GOMODCACHE
      - name: work
        mountPath: /root/.cache/go-build
        subPath: GOCACHE
      workingDir: /go/src/github.com/golang/example
  - name: build
    container:
      args:
      - |
        go build ./...
      command:
      - sh
      - -xuce
      image: golang:1.18
      volumeMounts:
      - name: work
        mountPath: /go/src/github.com/golang/example
        subPath: src
      - name: work
        mountPath: /go/pkg/mod
        subPath: GOMODCACHE
      - name: work
        mountPath: /root/.cache/go-build
        subPath: GOCACHE
      workingDir: /go/src/github.com/golang/example
  - name: test
    container:
      args:
      - |
        go install github.com/jstemmer/go-junit-report@latest
        go install github.com/alexec/junit2html@v0.0.2

        trap 'cat test.out | go-junit-report | junit2html > test-report.html' EXIT

        go test -v ./... 2>&1 > test.out
      command:
      - sh
      - -euxc
      image: golang:1.18
      volumeMounts:
      - name: work
        mountPath: /go/src/github.com/golang/example
        subPath: src
      - name: work
        mountPath: /go/pkg/mod
        subPath: GOMODCACHE
      - name: work
        mountPath: /root/.cache/go-build
        subPath: GOCACHE
      workingDir: /go/src/github.com/golang/example
    outputs:
      artifacts:
      - name: test-report
        path: /go/src/github.com/golang/example/test-report.html
        archive:
          none: {}
        s3:
          key: '{{workflow.parameters.branch}}/test-report.html'
  - name: cache-store
    container:
      image: golang:1.18
      volumeMounts:
      - name: work
        mountPath: /go/pkg/mod
        subPath: GOMODCACHE
      - name: work
        mountPath: /root/.cache/go-build
        subPath: GOCACHE
      workingDir: /go/src/github.com/golang/example
    outputs:
      artifacts:
      - name: GOMODCACHE
        optional: true
        path: /go/pkg/mod
        s3:
          key: github.com/golang/examples/{{workflow.parameters.branch}}/GOMODCACHE
      - name: GOCACHE
        optional: true
        path: /root/.cache/go-build
        s3:
          key: github.com/golang/examples/{{workflow.parameters.branch}}/GOCACHE
  - name: main
    dag:
      tasks:
      - name: cache-restore
        template: cache-restore
      - name: clone
        template: clone
      - name: deps
        dependencies:
        - clone
        - cache-restore
        template: deps
      - name: build
        dependencies:
        - deps
        template: build
      - name: test
        dependencies:
        - build
        template: test
  volumeClaimTemplates:
  - metadata:
      name: work
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 64Mi
  arguments:
    parameters:
    - name: branch
      value: master
