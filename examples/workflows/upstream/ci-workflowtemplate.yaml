apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: ci
spec:
  arguments:
    parameters:
    - name: branch
      value: master
  entrypoint: main
  onExit: cache-store
  templates:
  - container:
      args:
      - 'mkdir -p $(go env GOMODCACHE)

        [ -e /mnt/GOMODCACHE ] && cp -Rf /mnt/GOMODCACHE $(go env GOMODCACHE)

        mkdir -p $(go env GOCACHE)

        [ -e /mnt/GOCACHE ] &&  cp -Rf /mnt/GOCACHE $(go env GOCACHE)

        '
      command:
      - sh
      - -euxc
      image: golang:1.18
      volumeMounts:
      - mountPath: /go/pkg/mod
        name: work
        subPath: mod
      - mountPath: /root/.cache/go-build
        name: work
        subPath: cache
      workingDir: /go/src/github.com/golang/example
    inputs:
      artifacts:
      - name: GOMODCACHE
        optional: true
        path: /mnt/GOMODCACHE
        s3:
          key: github.com/golang/examples/{{workflow.parameters.branch}}/GOMODCACHE
      - name: GOCACHE
        optional: true
        path: /mnt/GOCACHE
        s3:
          key: github.com/golang/examples/{{workflow.parameters.branch}}/GOCACHE
    name: cache-restore
  - container:
      args:
      - 'git clone -v -b "{{workflow.parameters.branch}}" --single-branch --depth
        1 https://github.com/golang/example.git .

        '
      command:
      - sh
      - -euxc
      image: golang:1.18
      volumeMounts:
      - mountPath: /go/src/github.com/golang/example
        name: work
        subPath: src
      - mountPath: /go/pkg/mod
        name: work
        subPath: GOMODCACHE
      - mountPath: /root/.cache/go-build
        name: work
        subPath: GOCACHE
      workingDir: /go/src/github.com/golang/example
    name: clone
  - container:
      args:
      - 'go mod download -x

        '
      command:
      - sh
      - -xuce
      image: golang:1.18
      volumeMounts:
      - mountPath: /go/src/github.com/golang/example
        name: work
        subPath: src
      - mountPath: /go/pkg/mod
        name: work
        subPath: GOMODCACHE
      - mountPath: /root/.cache/go-build
        name: work
        subPath: GOCACHE
      workingDir: /go/src/github.com/golang/example
    name: deps
  - container:
      args:
      - 'go build ./...

        '
      command:
      - sh
      - -xuce
      image: golang:1.18
      volumeMounts:
      - mountPath: /go/src/github.com/golang/example
        name: work
        subPath: src
      - mountPath: /go/pkg/mod
        name: work
        subPath: GOMODCACHE
      - mountPath: /root/.cache/go-build
        name: work
        subPath: GOCACHE
      workingDir: /go/src/github.com/golang/example
    name: build
  - container:
      args:
      - 'go install github.com/jstemmer/go-junit-report@latest

        go install github.com/alexec/junit2html@v0.0.2


        trap ''cat test.out | go-junit-report | junit2html > test-report.html'' EXIT


        go test -v ./... 2>&1 > test.out

        '
      command:
      - sh
      - -euxc
      image: golang:1.18
      volumeMounts:
      - mountPath: /go/src/github.com/golang/example
        name: work
        subPath: src
      - mountPath: /go/pkg/mod
        name: work
        subPath: GOMODCACHE
      - mountPath: /root/.cache/go-build
        name: work
        subPath: GOCACHE
      workingDir: /go/src/github.com/golang/example
    name: test
    outputs:
      artifacts:
      - archive:
          none: {}
        name: test-report
        path: /go/src/github.com/golang/example/test-report.html
        s3:
          key: '{{workflow.parameters.branch}}/test-report.html'
  - container:
      image: golang:1.18
      volumeMounts:
      - mountPath: /go/pkg/mod
        name: work
        subPath: GOMODCACHE
      - mountPath: /root/.cache/go-build
        name: work
        subPath: GOCACHE
      workingDir: /go/src/github.com/golang/example
    name: cache-store
    outputs:
      artifacts:
      - name: GOMODCACHE
        optional: true
        path: /go/pkg/mod
        s3:
          key: github.com/golang/examples/{{workflow.parameters.branch}}/GOMODCACHE
      - name: GOCACHE
        optional: true
        path: /root/.cache/go-build
        s3:
          key: github.com/golang/examples/{{workflow.parameters.branch}}/GOCACHE
  - dag:
      tasks:
      - name: cache-restore
        template: cache-restore
      - name: clone
        template: clone
      - dependencies:
        - clone
        - cache-restore
        name: deps
        template: deps
      - dependencies:
        - deps
        name: build
        template: build
      - dependencies:
        - build
        name: test
        template: test
    name: main
  volumeClaimTemplates:
  - metadata:
      name: work
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 64Mi
