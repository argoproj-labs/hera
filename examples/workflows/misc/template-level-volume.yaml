apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: template-level-volume-
spec:
  entrypoint: generate-and-use-volume
  templates:
  - inputs:
      parameters:
      - name: pvc-size
    name: generate-volume
    outputs:
      parameters:
      - name: pvc-name
        valueFrom:
          jsonPath: '{.metadata.name}'
    resource:
      action: create
      manifest: |
        apiVersion: v1
        kind: PersistentVolumeClaim
        metadata:
          generateName: pvc-example-
        spec:
          accessModes: ['ReadWriteOnce', 'ReadOnlyMany']
          resources:
            requests:
              storage: '{{inputs.parameters.pvc-size}}'
      setOwnerReference: true
  - container:
      args:
      - echo generating message in volume; cowsay hello world | tee /mnt/vol/hello_world.txt
      command:
      - sh
      - -c
      image: docker/whalesay:latest
      volumeMounts:
      - mountPath: /mnt/vol
        name: workdir
    inputs:
      parameters:
      - name: pvc-name
    name: whalesay
    volumes:
    - name: workdir
      persistentVolumeClaim:
        claimName: '{{inputs.parameters.pvc-name}}'
  - container:
      args:
      - echo getting message from volume; find /mnt/vol; cat /mnt/vol/hello_world.txt
      command:
      - sh
      - -c
      image: alpine:latest
      volumeMounts:
      - mountPath: /mnt/vol
        name: workdir
    inputs:
      parameters:
      - name: pvc-name
    name: print-message
    volumes:
    - name: workdir
      persistentVolumeClaim:
        claimName: '{{inputs.parameters.pvc-name}}'
  - name: generate-and-use-volume
    steps:
    - - arguments:
          parameters:
          - name: pvc-size
            value: 1Gi
        name: generate-volume
        template: generate-volume
    - - arguments:
          parameters:
          - name: pvc-name
            value: '{{steps.generate-volume.outputs.parameters.pvc-name}}'
        name: generate
        template: whalesay
    - - arguments:
          parameters:
          - name: pvc-name
            value: '{{steps.generate-volume.outputs.parameters.pvc-name}}'
        name: print
        template: print-message
