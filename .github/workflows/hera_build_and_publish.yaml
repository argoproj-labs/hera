name: Hera `main` build and publish
on:
  push:
    branches:
      - main
    paths:
      - 'VERSION'
jobs:
  test-index-build-and-publish:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: Install core dependencies
        run: |
          python -m pip install --upgrade pip wheel pipenv

      - name: Checkout
        uses: actions/checkout@v2

      - name: Sync virtual environment
        run: |
          pipenv sync --dev --pre

      - name: Run build
        run: |
          pipenv run make build

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TEST_API_TOKEN }}
          verbose: true
          repository_url: https://test.pypi.org/legacy/

  test-index-install-and-run-tests:
    needs:
      - test-index-build-and-publish
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: Install core dependencies
        run: |
          python -m pip install --upgrade pip wheel pytest

      - name: Install published test package
        run: |
          python -m pip install --index-url https://test.pypi.org/simple/ hera-workflows

      - name: Run tests with published package
        run: |
          python -m pytest --durations=5 tests

  main-build-and-publish:
    needs:
      - test-index-install-and-run-tests
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: Checkout
        uses: actions/checkout@v2

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel

      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv sync --dev --pre

      - name: Run build
        run: |
          pipenv run make build

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          # want to get rich logs in case `twine upload` fails for some reason
          verbose: true
          # just in case someone publishes another version by accidentally adding a new line to VERSION
          # we want to skip the existing package and not fail with a 400 if a publish attempt is performed
          skip_existing: true




