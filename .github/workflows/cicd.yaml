name: hera cicd

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    name: build + test py${{ matrix.python-version }} on ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        python-version: [ '3.7', '3.8', '3.9', '3.10' ]
    env:
      PYVER: ${{ matrix.python-version }}
      OS: ${{ matrix.os }}

    runs-on: ${{ matrix.os }}

    steps:
      - name: setup python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: checkout
        uses: actions/checkout@v2

      - name: install base dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install "tox<4.0" tox-gh-actions poetry

      - name: lint
        env:
          TOXENV: lint
        run: |
          tox

      - name: typecheck
        env:
          TOXENV: typecheck
        run: |
          tox

      - name: tests
        run: |
          tox

      - name: upload coverage files
        uses: actions/upload-artifact@v2
        with:
          name: coverage-data
          path: ".tox/.coverage.*"

  coverage:
    needs: [ test ]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: setup python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: download coverage files
        uses: actions/download-artifact@v2
        with:
          name: coverage-data
          path: .tox

      # - name: list coverage files
      #   run: |
      #     find .tox -name ".coverage.*"

      - name: install tox
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox

      - name: create coverage report
        env:
          TOXENV: coverage
        run: |
          tox

      - name: upload coverage HTML report
        uses: actions/upload-artifact@v2
        with:
          name: html-report
          path: .tox/htmlcov

  publish:
    needs: [ coverage, test, build-py3-none-any ]
    if: success() && ( github.ref == 'refs/heads/main' )
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: setup python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: Install base dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry twine

      - name: Build and publish
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          poetry publish --build --username $TWINE_USERNAME --password $TWINE_PASSWORD
